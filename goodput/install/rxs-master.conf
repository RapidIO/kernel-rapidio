// Configuration file for Fabric Management Daemon (FMD)
// File names for device directory
DEV_DIR /RIO_SM_DEV_DIR
DEV_DIR_MTX /RIO_SM_DEV_DIR_MUTEX

// Fabric management daemon MPORT information:
// - Port number
// - Operating mode (slave/master)
// - Memory size (mem34, mem50, mem66)
// - Size(s) of deviceIDs for which routing must be configured/learned
// - DestID of the master port.
// - Hopcount of the master port (should always be 255).
MPORT 0 master MEMSZ dev08 0x1 255 dev16 0x1 255 END

// Master Fabric Management Daemon configuration
// - Size(s) of device ID (dev8, dev16, dev32)
// - Device ID
// - Channelized Messaging channel number
//
// If any of the MPORTs above is operating in "master" mode, this selects
// the device ID for the master and the Channelized Messaging number for
// CM Messaging with other daemons.

MASTER_INFO dev08 0x1 4545

// System Configuration Info
// - Define list of endpoints.  Each endpoint has:
//      - a list of ports with configuration information
// - Define list of switches.  Each switch has:
//      - a list of ports
//      - routing tables.
// - Define connections between switches/endpoints
//
// ENDPOINT <ep_name>
// <ep_name>  : Text string used to identify this endpoint
// PORT <port_num> <comptag> {<devid_sz> <devID> <hopcount>...}
// <port_num> : Endpoint port number
// <comp_tag> : Hexadecimal component tag value for this port number/device
// <max_width>: 4x|2x|1x
// <op width> : 4x|2x|1x
// <baudrate> : 6p25|5p0|3p125|2p5|1p25
// <idle seq> : IDLE1|IDLE2
// <err_mgmt> : EM_OFF|EM_ON
// List of device IDs for the port:
// <devid_sz> : dev08|dev16|dev32
// <devID>    : decimal value for device ID
// <hopcount> : decimal value for hopcount for maintenance packets
// PEND       : End of port list for this endpoint
// Note: Each PORT can have a device ID for each allowed size
//

ENDPOINT node1  PORT 0 0x10001 4x 4x 5p0   IDLE1 EM_ON dev08 0x1 255 dev16 0x1 255 END PEND
ENDPOINT node2  PORT 0 0x20002 4x 4x 5p0   IDLE1 EM_ON dev08 0x2 1 dev16 0x2 1 END PEND
ENDPOINT node3  PORT 0 0x30003 4x 4x 5p0   IDLE1 EM_ON dev08 0x3 1 dev16 0x3 1 END PEND
ENDPOINT node4  PORT 0 0x40004 4x 4x 5p0   IDLE1 EM_ON dev08 0x4 1 dev16 0x4 1 END PEND
ENDPOINT node5  PORT 0 0x50005 4x 4x 5p0   IDLE1 EM_ON dev08 0x5 1 dev16 0x5 1 END PEND
ENDPOINT node6  PORT 0 0x60006 4x 4x 5p0   IDLE1 EM_ON dev08 0x6 1 dev16 0x6 1 END PEND
ENDPOINT node7  PORT 0 0x70007 4x 4x 5p0   IDLE1 EM_ON dev08 0x7 1 dev16 0x7 1 END PEND
ENDPOINT node8  PORT 0 0x80008 4x 4x 5p0   IDLE1 EM_ON dev08 0x8 1 dev16 0x8 1 END PEND
ENDPOINT node9  PORT 0 0x90009 4x 4x 5p0   IDLE1 EM_ON dev08 0x9 1 dev16 0x9 1 END PEND
ENDPOINT node10 PORT 0 0xA000A 4x 4x 5p0   IDLE1 EM_ON dev08 0xA 1 dev16 0xA 1 END PEND
ENDPOINT node11 PORT 0 0xB000B 4x 4x 5p0   IDLE1 EM_ON dev08 0xB 1 dev16 0xB 1 END PEND
ENDPOINT node12 PORT 0 0xC000C 4x 4x 5p0   IDLE1 EM_ON dev08 0xC 1 dev16 0xC 1 END PEND

// SWITCH <device> <name> <devid_sz> <devID> <hc> <ct>
// PORT <#> <max width> <op width> <baudrate> <idle seq> <err_mgmt>
// ROUTING_TABLE <devid_sz> <rt_port>
// <rt_port : GLOBAL, or 0 to 18 (decimal)
// DESTID <devid|ep_name.#> <rt_value>
// RANGE <devid> <devid> <rt_value>
// MCMASK <mc_masknum> <portlist>
// <END>
// Where the terms above are defined as:
// <devid_sz>: dev08|dev16|dev32
// <#>       : port number, 0-17
// <max_widt>: 4x|2x|1x
// <op width>: 4x|2x|1x
// <baudrate>: 6p25|5p0|3p125|2p5|1p25
// <idle seq>: IDLE1|IDLE2
// <err_mgmt>: EM_OFF|EM_ON
// <devid|ep_name.#> : decimal device identifier value, or
//                     device name and port number.
// <rt_value> : 0 - 17    : Port number
//              <MC xx>   : Multicast Mask number, xx can be 0-39.
//              NEXT_BYTE : Use next byte in deviceID for routing.
//                          Invalid for Dev08 deviceIDs.
//              DEFAULT   : Use default route
//              DROP      : Drop these packets
// <mc_masknum>: decimal number 0 through 39
// <portlist>  : list of port numbers (0-17) in the multicast mask
SWITCH RSX2448 MAIN_SWITCH dev08 0xd 0 END 0xd000d
PORT 0  4x 4x 5p0 IDLE1 EM_ON
PORT 2  4x 4x 5p0 IDLE1 EM_ON
PORT 4  4x 4x 5p0 IDLE1 EM_ON
PORT 6  4x 4x 5p0 IDLE1 EM_ON
PORT 8  4x 4x 5p0 IDLE1 EM_ON
PORT 10 4x 4x 5p0 IDLE1 EM_ON
PORT 12 4x 4x 5p0 IDLE1 EM_ON
PORT 14 4x 4x 5p0 IDLE1 EM_ON
PORT 16 4x 4x 5p0 IDLE1 EM_ON
PORT 18 4x 4x 5p0 IDLE1 EM_ON
PORT 20 4x 4x 5p0 IDLE1 EM_ON
PORT 22 4x 4x 5p0 IDLE1 EM_ON
ROUTING_TABLE dev08 GLOBAL
DFLTPORT DROP
DESTID node1.0 0
DESTID node2.0 2
DESTID node3.0 16
DESTID node4.0 18
DESTID node5.0 6
DESTID node6.0 4 
DESTID node7.0 8
DESTID node8.0 10
DESTID node9.0 20
DESTID node10.0 22
DESTID node11.0 14
DESTID node12.0 12
ROUTING_TABLE dev16 GLOBAL
DFLTPORT DROP
DESTID node1.0 0
DESTID node2.0 2
DESTID node3.0 16
DESTID node4.0 18
DESTID node5.0 6
DESTID node6.0 4 
DESTID node7.0 8
DESTID node8.0 10
DESTID node9.0 20
DESTID node10.0 22
DESTID node11.0 14
DESTID node12.0 12
END

// Connection topology in the fabric.
// CONNECT <device.#> <device.#>
// Where <device.#> can be a switch or an endpoint.
//

CONNECT MAIN_SWITCH.0  node1.0
CONNECT MAIN_SWITCH.2  node2.0
CONNECT MAIN_SWITCH.16 node3.0
CONNECT MAIN_SWITCH.18 node4.0
CONNECT MAIN_SWITCH.6  node5.0
CONNECT MAIN_SWITCH.4  node6.0
CONNECT MAIN_SWITCH.8  node7.0
CONNECT MAIN_SWITCH.10 node8.0
CONNECT MAIN_SWITCH.20 node9.0
CONNECT MAIN_SWITCH.22 node10.0
CONNECT MAIN_SWITCH.14 node11.0
CONNECT MAIN_SWITCH.12 node12.0

// Every file must have an "EOF" keyword to indicate end of file.
// This makes it easy to end configuration file processing before the
// actual end of file, allowing additional comments/content to follow.

EOF
